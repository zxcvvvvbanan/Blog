import{_ as e,c as t,a0 as i,o as r}from"./chunks/framework.D84hx5uF.js";const l="/assets/FileIO.dAZ5lv6d.png",o="/assets/Butler.vilxVqie.png",b=JSON.parse('{"title":"경력기술","description":"","frontmatter":{"date":"2024-07-02T00:00:00.000Z","category":["Houdini Interface"],"tag":["Python","Houdini-Interface"],"star":true,"sticky":true},"headers":[],"relativePath":"blog/Experience.md","filePath":"blog/Experience.md"}'),n={name:"blog/Experience.md"};function h(s,a,u,c,d,p){return r(),t("div",null,a[0]||(a[0]=[i('<h1 id="경력기술" tabindex="-1">경력기술 <a class="header-anchor" href="#경력기술" aria-label="Permalink to &quot;경력기술&quot;">​</a></h1><h2 id="주요성과" tabindex="-1">주요성과 <a class="header-anchor" href="#주요성과" aria-label="Permalink to &quot;주요성과&quot;">​</a></h2><h3 id="후디니-내부-파이프라인-개선" tabindex="-1">후디니 내부 파이프라인 개선 <a class="header-anchor" href="#후디니-내부-파이프라인-개선" aria-label="Permalink to &quot;후디니 내부 파이프라인 개선&quot;">​</a></h3><p>주요성과</p><ul><li>후디니 내부에서 상 하위 네트워크를 자주 변경함에 있어 작업 효율이 떨어지는것을 고려하여 아티스트들의 피로도를 낮춰주고자 노력하였고 80% 이상 제작한 스크립트 및 툴들을 사용하고 있습니다.</li><li>업무 도중 발생할 수 있는 휴먼에러를 방지하여 업무 능률을 향상시켰습니다.</li></ul><h4 id="file-i-o" tabindex="-1">File I/O <a class="header-anchor" href="#file-i-o" aria-label="Permalink to &quot;File I/O&quot;">​</a></h4><p><img src="'+l+'" alt="An image"></p><p>주요내용</p><ul><li>내부 툴에 대한 기능 추가 (이미지의 Renderfarm, Tweak 영역 모두, Cache path 란의 Author) <ul><li>랜더팜에 유저가 job을 submit 하기 위해서 ropnet 내부 몇가지 노드들로 네트워크 구성을 지어 submit 하기 위한 노드와 경로가 일치하는지 확인하는 등 번거로웠으나 이런 과정들을 스크립트를 생성하여 반자동화 하였습니다.</li></ul></li></ul><p>기술 스택</p><ul><li>Python: 후디니를 파이썬을 이용하여 노드를 생성, 변경 등 조작을 할 수 있습니다.</li><li>Pixar Tractor: 랜더팜에 job 을 submit 할 수 있습니다.</li></ul><h4 id="샷-automation-툴" tabindex="-1">샷 Automation 툴 <a class="header-anchor" href="#샷-automation-툴" aria-label="Permalink to &quot;샷 Automation 툴&quot;">​</a></h4><p><img src="'+o+'" alt="An image"></p><p>주요내용</p><ul><li>프로그램 기획 및 개발 <ul><li>샷 작업을 시작할 때 기본적인 노드부터, 카메라, 지오메트리 경로를 이전 작업하던 샷에서 복사해오거나 일일히 만들어야 했으나 모든 과정을 자동화하는 툴을 만들었습니다.</li><li>매니지먼트 툴에서 작업자의 샷에 관련된 정보 (Start frame, End frame, FPS 등)들을 retrieve 할 수 있습니다.</li></ul></li></ul><p>기술 스택</p><ul><li>Python (+hython): 후디니를 파이썬을 이용하여 노드를 생성, 변경 등 조작할 수 있고 외부 서버 정보를 가져올 수 있습니다.</li></ul><h2 id="상세-기술-스택" tabindex="-1">상세 기술 스택 <a class="header-anchor" href="#상세-기술-스택" aria-label="Permalink to &quot;상세 기술 스택&quot;">​</a></h2><h3 id="python" tabindex="-1">Python <a class="header-anchor" href="#python" aria-label="Permalink to &quot;Python&quot;">​</a></h3><p>후디니 API를 참고하여 간단한 300줄 미만의 스크립트를 만들어본 경험이 있습니다. 후디니 외적으로도 파일 입출력이 가능한 간단한 툴을 만들 수 있습니다.</p><h3 id="샷그리드-데드라인" tabindex="-1">샷그리드, 데드라인 <a class="header-anchor" href="#샷그리드-데드라인" aria-label="Permalink to &quot;샷그리드, 데드라인&quot;">​</a></h3><p>현재 스튜디오에서는 샷그리드를 사용하지 않았기 때문에 숙련도가 미비하며 이미 샷그리드가 구축된 환경에서 학습이 필요합니다.</p><h3 id="rez-패키지-매니지먼트" tabindex="-1">REZ (패키지 매니지먼트) <a class="header-anchor" href="#rez-패키지-매니지먼트" aria-label="Permalink to &quot;REZ (패키지 매니지먼트)&quot;">​</a></h3><p>패키지를 생성하고 관리할 수 있으나 이미 구축된 환경이 필요합니다.</p><h3 id="git" tabindex="-1">Git <a class="header-anchor" href="#git" aria-label="Permalink to &quot;Git&quot;">​</a></h3><p>git 환경을 만들고 기본적인 개념을 알고있으며 자유롭게 작업이 가능합니다. branch 생성으로 기초적인 공동작업이 가능합니다.</p>',26)]))}const f=e(n,[["render",h]]);export{b as __pageData,f as default};
